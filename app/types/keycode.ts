export enum SpecialKey {
  LAYER_TAP = 0x4000,
}

export enum KeyCode {
  No = 0x0000,
  ErrorRollover = 0x0001,
  PostFail = 0x0002,
  ErrorUndefined = 0x0003,
  A = 0x0004,
  B = 0x0005,
  C = 0x0006,
  D = 0x0007,
  E = 0x0008,
  F = 0x0009,
  G = 0x000a,
  H = 0x000b,
  I = 0x000c,
  J = 0x000d,
  K = 0x000e,
  L = 0x000f,
  M = 0x0010,
  N = 0x0011,
  O = 0x0012,
  P = 0x0013,
  Q = 0x0014,
  R = 0x0015,
  S = 0x0016,
  T = 0x0017,
  U = 0x0018,
  V = 0x0019,
  W = 0x001a,
  X = 0x001b,
  Y = 0x001c,
  Z = 0x001d,
  Kc1 = 0x001e,
  Kc2 = 0x001f,
  Kc3 = 0x0020,
  Kc4 = 0x0021,
  Kc5 = 0x0022,
  Kc6 = 0x0023,
  Kc7 = 0x0024,
  Kc8 = 0x0025,
  Kc9 = 0x0026,
  Kc0 = 0x0027,
  Enter = 0x0028,
  Escape = 0x0029,
  Backspace = 0x002a,
  Tab = 0x002b,
  Space = 0x002c,
  Minus = 0x002d,
  Equal = 0x002e,
  LeftBracket = 0x002f,
  RightBracket = 0x0030,
  Backslash = 0x0031,
  NonusHash = 0x0032,
  Semicolon = 0x0033,
  Quote = 0x0034,
  Grave = 0x0035,
  Comma = 0x0036,
  Dot = 0x0037,
  Slash = 0x0038,
  CapsLock = 0x0039,
  F1 = 0x003a,
  F2 = 0x003b,
  F3 = 0x003c,
  F4 = 0x003d,
  F5 = 0x003e,
  F6 = 0x003f,
  F7 = 0x0040,
  F8 = 0x0041,
  F9 = 0x0042,
  F10 = 0x0043,
  F11 = 0x0044,
  F12 = 0x0045,
  PrintScreen = 0x0046,
  ScrollLock = 0x0047,
  Pause = 0x0048,
  Insert = 0x0049,
  Home = 0x004a,
  PageUp = 0x004b,
  Delete = 0x004c,
  End = 0x004d,
  PageDown = 0x004e,
  Right = 0x004f,
  Left = 0x0050,
  Down = 0x0051,
  Up = 0x0052,
  NumLock = 0x0053,
  KpSlash = 0x0054,
  KpAsterisk = 0x0055,
  KpMinus = 0x0056,
  KpPlus = 0x0057,
  KpEnter = 0x0058,
  Kp1 = 0x0059,
  Kp2 = 0x005a,
  Kp3 = 0x005b,
  Kp4 = 0x005c,
  Kp5 = 0x005d,
  Kp6 = 0x005e,
  Kp7 = 0x005f,
  Kp8 = 0x0060,
  Kp9 = 0x0061,
  Kp0 = 0x0062,
  KpDot = 0x0063,
  NonusBackslash = 0x0064,
  Application = 0x0065,
  KbPower = 0x0066,
  KpEqual = 0x0067,
  F13 = 0x0068,
  F14 = 0x0069,
  F15 = 0x006a,
  F16 = 0x006b,
  F17 = 0x006c,
  F18 = 0x006d,
  F19 = 0x006e,
  F20 = 0x006f,
  F21 = 0x0070,
  F22 = 0x0071,
  F23 = 0x0072,
  F24 = 0x0073,
  Execute = 0x0074,
  Help = 0x0075,
  Menu = 0x0076,
  Select = 0x0077,
  Stop = 0x0078,
  Again = 0x0079,
  Undo = 0x007a,
  Cut = 0x007b,
  Copy = 0x007c,
  Paste = 0x007d,
  Find = 0x007e,
  KbMute = 0x007f,
  KbVolumeUp = 0x0080,
  KbVolumeDown = 0x0081,
  LockingCapsLock = 0x0082,
  LockingNumLock = 0x0083,
  LockingScrollLock = 0x0084,
  KpComma = 0x0085,
  KpEqualAs400 = 0x0086,
  International1 = 0x0087,
  International2 = 0x0088,
  International3 = 0x0089,
  International4 = 0x008a,
  International5 = 0x008b,
  International6 = 0x008c,
  International7 = 0x008d,
  International8 = 0x008e,
  International9 = 0x008f,
  Language1 = 0x0090,
  Language2 = 0x0091,
  Language3 = 0x0092,
  Language4 = 0x0093,
  Language5 = 0x0094,
  Language6 = 0x0095,
  Language7 = 0x0096,
  Language8 = 0x0097,
  Language9 = 0x0098,
  AlternateErase = 0x0099,
  SystemRequest = 0x009a,
  Cancel = 0x009b,
  Clear = 0x009c,
  Prior = 0x009d,
  Return = 0x009e,
  Separator = 0x009f,
  Out = 0x00a0,
  Oper = 0x00a1,
  ClearAgain = 0x00a2,
  Crsel = 0x00a3,
  Exsel = 0x00a4,
  SystemPower = 0x00a5,
  SystemSleep = 0x00a6,
  SystemWake = 0x00a7,
  AudioMute = 0x00a8,
  AudioVolUp = 0x00a9,
  AudioVolDown = 0x00aa,
  MediaNextTrack = 0x00ab,
  MediaPrevTrack = 0x00ac,
  MediaStop = 0x00ad,
  MediaPlayPause = 0x00ae,
  MediaSelect = 0x00af,
  MediaEject = 0x00b0,
  Mail = 0x00b1,
  Calculator = 0x00b2,
  MyComputer = 0x00b3,
  WwwSearch = 0x00b4,
  WwwHome = 0x00b5,
  WwwBack = 0x00b6,
  WwwForward = 0x00b7,
  WwwStop = 0x00b8,
  WwwRefresh = 0x00b9,
  WwwFavorites = 0x00ba,
  MediaFastForward = 0x00bb,
  MediaRewind = 0x00bc,
  BrightnessUp = 0x00bd,
  BrightnessDown = 0x00be,
  ControlPanel = 0x00bf,
  Assistant = 0x00c0,
  MissionControl = 0x00c1,
  Launchpad = 0x00c2,
  MouseUp = 0x00cd,
  MouseDown = 0x00ce,
  MouseLeft = 0x00cf,
  MouseRight = 0x00d0,
  MouseBtn1 = 0x00d1,
  MouseBtn2 = 0x00d2,
  MouseBtn3 = 0x00d3,
  MouseBtn4 = 0x00d4,
  MouseBtn5 = 0x00d5,
  MouseBtn6 = 0x00d6,
  MouseBtn7 = 0x00d7,
  MouseBtn8 = 0x00d8,
  MouseWheelUp = 0x00d9,
  MouseWheelDown = 0x00da,
  MouseWheelLeft = 0x00db,
  MouseWheelRight = 0x00dc,
  MouseAccel0 = 0x00dd,
  MouseAccel1 = 0x00de,
  MouseAccel2 = 0x00df,
  LCtrl = 0x00e0,
  LShift = 0x00e1,
  LAlt = 0x00e2,
  LGui = 0x00e3,
  RCtrl = 0x00e4,
  RShift = 0x00e5,
  RAlt = 0x00e6,
  RGui = 0x00e7,
  MagicSwapControlCapsLock = 0x100,
  MagicUnswapControlCapsLock = 0x101,
  MagicToggleControlCapsLock = 0x102,
  MagicCapsLockAsControlOff = 0x103,
  MagicCapsLockAsControlOn = 0x104,
  MagicSwapLaltLGui = 0x105,
  MagicUnswapLaltLGui = 0x106,
  MagicSwapRaltRGui = 0x107,
  MagicUnswapRaltRGui = 0x108,
  MagicGuiOn = 0x109,
  MagicGuiOff = 0x10a,
  MagicToggleGui = 0x10b,
  MagicSwapGraveEsc = 0x10c,
  MagicUnswapGraveEsc = 0x10d,
  MagicSwapBackslashBackspace = 0x10e,
  MagicUnswapBackslashBackspace = 0x10f,
  MagicToggleBackslashBackspace = 0x110,
  MagicNkroOn = 0x111,
  MagicNkroOff = 0x112,
  MagicToggleNkro = 0x113,
  MagicSwapAltGui = 0x114,
  MagicUnswapAltGui = 0x115,
  MagicToggleAltGui = 0x116,
  MagicSwapLctlLGui = 0x117,
  MagicUnswapLctlLGui = 0x118,
  MagicSwapRctlRGui = 0x119,
  MagicUnswapRctlRGui = 0x11a,
  MagicSwapCtlGui = 0x11b,
  MagicUnswapCtlGui = 0x11c,
  MagicToggleCtlGui = 0x11d,
  MagicEeHandsLeft = 0x11e,
  MagicEeHandsRight = 0x11f,
  MagicSwapEscapeCapsLock = 0x120,
  MagicUnswapEscapeCapsLock = 0x121,
  MagicToggleEscapeCapsLock = 0x122,
  MidiOn = 0x200,
  MidiOff = 0x201,
  MidiToggle = 0x202,
  MidiNoteC0 = 0x203,
  MidiNoteCSharp0 = 0x204,
  MidiNoteD0 = 0x205,
  MidiNoteDSharp0 = 0x206,
  MidiNoteE0 = 0x207,
  MidiNoteF0 = 0x208,
  MidiNoteFSharp0 = 0x209,
  MidiNoteG0 = 0x20a,
  MidiNoteGSharp0 = 0x20b,
  MidiNoteA0 = 0x20c,
  MidiNoteASharp0 = 0x20d,
  MidiNoteB0 = 0x20e,
  MidiNoteC1 = 0x20f,
  MidiNoteCSharp1 = 0x210,
  MidiNoteD1 = 0x211,
  MidiNoteDSharp1 = 0x212,
  MidiNoteE1 = 0x213,
  MidiNoteF1 = 0x214,
  MidiNoteFSharp1 = 0x215,
  MidiNoteG1 = 0x216,
  MidiNoteGSharp1 = 0x217,
  MidiNoteA1 = 0x218,
  MidiNoteASharp1 = 0x219,
  MidiNoteB1 = 0x21a,
  MidiNoteC2 = 0x21b,
  MidiNoteCSharp2 = 0x21c,
  MidiNoteD2 = 0x21d,
  MidiNoteDSharp2 = 0x21e,
  MidiNoteE2 = 0x21f,
  MidiNoteF2 = 0x220,
  MidiNoteFSharp2 = 0x221,
  MidiNoteG2 = 0x222,
  MidiNoteGSharp2 = 0x223,
  MidiNoteA2 = 0x224,
  MidiNoteASharp2 = 0x225,
  MidiNoteB2 = 0x226,
  MidiNoteC3 = 0x227,
  MidiNoteCSharp3 = 0x228,
  MidiNoteD3 = 0x229,
  MidiNoteDSharp3 = 0x22a,
  MidiNoteE3 = 0x22b,
  MidiNoteF3 = 0x22c,
  MidiNoteFSharp3 = 0x22d,
  MidiNoteG3 = 0x22e,
  MidiNoteGSharp3 = 0x22f,
  MidiNoteA3 = 0x230,
  MidiNoteASharp3 = 0x231,
  MidiNoteB3 = 0x232,
  MidiNoteC4 = 0x233,
  MidiNoteCSharp4 = 0x234,
  MidiNoteD4 = 0x235,
  MidiNoteDSharp4 = 0x236,
  MidiNoteE4 = 0x237,
  MidiNoteF4 = 0x238,
  MidiNoteFSharp4 = 0x239,
  MidiNoteG4 = 0x23a,
  MidiNoteGSharp4 = 0x23b,
  MidiNoteA4 = 0x23c,
  MidiNoteASharp4 = 0x23d,
  MidiNoteB4 = 0x23e,
  MidiNoteC5 = 0x23f,
  MidiNoteCSharp5 = 0x240,
  MidiNoteD5 = 0x241,
  MidiNoteDSharp5 = 0x242,
  MidiNoteE5 = 0x243,
  MidiNoteF5 = 0x244,
  MidiNoteFSharp5 = 0x245,
  MidiNoteG5 = 0x246,
  MidiNoteGSharp5 = 0x247,
  MidiNoteA5 = 0x248,
  MidiNoteASharp5 = 0x249,
  MidiNoteB5 = 0x24a,
  MidiOctaveN2 = 0x24b,
  MidiOctaveN1 = 0x24c,
  MidiOctave0 = 0x24d,
  MidiOctave1 = 0x24e,
  MidiOctave2 = 0x24f,
  MidiOctave3 = 0x250,
  MidiOctave4 = 0x251,
  MidiOctave5 = 0x252,
  MidiOctave6 = 0x253,
  MidiOctave7 = 0x254,
  MidiOctaveDOWN = 0x255,
  MidiOctaveUP = 0x256,
  MidiTransposeN6 = 0x257,
  MidiTransposeN5 = 0x258,
  MidiTransposeN4 = 0x259,
  MidiTransposeN3 = 0x25a,
  MidiTransposeN2 = 0x25b,
  MidiTransposeN1 = 0x25c,
  MidiTranspose0 = 0x25d,
  MidiTranspose1 = 0x25e,
  MidiTranspose2 = 0x25f,
  MidiTranspose3 = 0x260,
  MidiTranspose4 = 0x261,
  MidiTranspose5 = 0x262,
  MidiTranspose6 = 0x263,
  MidiTransposeDown = 0x264,
  MidiTransposeUp = 0x265,
  MidiVelocity0 = 0x266,
  MidiVelocity1 = 0x267,
  MidiVelocity2 = 0x268,
  MidiVelocity3 = 0x269,
  MidiVelocity4 = 0x26a,
  MidiVelocity5 = 0x26b,
  MidiVelocity6 = 0x26c,
  MidiVelocity7 = 0x26d,
  MidiVelocity8 = 0x26e,
  MidiVelocity9 = 0x26f,
  MidiVelocity10 = 0x270,
  MidiVelocityDOWN = 0x271,
  MidiVelocityUP = 0x272,
  MidiChannel1 = 0x273,
  MidiChannel2 = 0x274,
  MidiChannel3 = 0x275,
  MidiChannel4 = 0x276,
  MidiChannel5 = 0x277,
  MidiChannel6 = 0x278,
  MidiChannel7 = 0x279,
  MidiChannel8 = 0x27a,
  MidiChannel9 = 0x27b,
  MidiChannel10 = 0x27c,
  MidiChannel11 = 0x27d,
  MidiChannel12 = 0x27e,
  MidiChannel13 = 0x27f,
  MidiChannel14 = 0x280,
  MidiChannel15 = 0x281,
  MidiChannel16 = 0x282,
  MidiChannelDOWN = 0x283,
  MidiChannelUP = 0x284,
  MidiAllNotesOff = 0x285,
  MidiSustain = 0x286,
  MidiPortamento = 0x287,
  MidiSostenuto = 0x288,
  MidiSoft = 0x289,
  MidiLegato = 0x28a,
  MidiModulation = 0x28b,
  MidiModulationSpeedDown = 0x28c,
  MidiModulationSpeedUp = 0x28d,
  MidiPitchBendDown = 0x28e,
  MidiPitchBendUp = 0x28f,
  SequencerOn = 0x300,
  SequencerOff = 0x301,
  SequencerToggle = 0x302,
  SequencerTempoDown = 0x303,
  SequencerTempoUp = 0x304,
  SequencerResolutionDown = 0x305,
  SequencerResolutionUp = 0x306,
  SequencerStepsAll = 0x307,
  SequencerStepsClear = 0x308,
  JoystickButton0 = 0x400,
  JoystickButton1 = 0x401,
  JoystickButton2 = 0x402,
  JoystickButton3 = 0x403,
  JoystickButton4 = 0x404,
  JoystickButton5 = 0x405,
  JoystickButton6 = 0x406,
  JoystickButton7 = 0x407,
  JoystickButton8 = 0x408,
  JoystickButton9 = 0x409,
  JoystickButton10 = 0x40a,
  JoystickButton11 = 0x40b,
  JoystickButton12 = 0x40c,
  JoystickButton13 = 0x40d,
  JoystickButton14 = 0x40e,
  JoystickButton15 = 0x40f,
  JoystickButton16 = 0x410,
  JoystickButton17 = 0x411,
  JoystickButton18 = 0x412,
  JoystickButton19 = 0x413,
  JoystickButton20 = 0x414,
  JoystickButton21 = 0x415,
  JoystickButton22 = 0x416,
  JoystickButton23 = 0x417,
  JoystickButton24 = 0x418,
  JoystickButton25 = 0x419,
  JoystickButton26 = 0x41a,
  JoystickButton27 = 0x41b,
  JoystickButton28 = 0x41c,
  JoystickButton29 = 0x41d,
  JoystickButton30 = 0x41e,
  JoystickButton31 = 0x41f,
  ProgrammableButton1 = 0x420,
  ProgrammableButton2 = 0x421,
  ProgrammableButton3 = 0x422,
  ProgrammableButton4 = 0x423,
  ProgrammableButton5 = 0x424,
  ProgrammableButton6 = 0x425,
  ProgrammableButton7 = 0x426,
  ProgrammableButton8 = 0x427,
  ProgrammableButton9 = 0x428,
  ProgrammableButton10 = 0x429,
  ProgrammableButton11 = 0x42a,
  ProgrammableButton12 = 0x42b,
  ProgrammableButton13 = 0x42c,
  ProgrammableButton14 = 0x42d,
  ProgrammableButton15 = 0x42e,
  ProgrammableButton16 = 0x42f,
  ProgrammableButton17 = 0x430,
  ProgrammableButton18 = 0x431,
  ProgrammableButton19 = 0x432,
  ProgrammableButton20 = 0x433,
  ProgrammableButton21 = 0x434,
  ProgrammableButton22 = 0x435,
  ProgrammableButton23 = 0x436,
  ProgrammableButton24 = 0x437,
  ProgrammableButton25 = 0x438,
  ProgrammableButton26 = 0x439,
  ProgrammableButton27 = 0x43a,
  ProgrammableButton28 = 0x43b,
  ProgrammableButton29 = 0x43c,
  ProgrammableButton30 = 0x43d,
  ProgrammableButton31 = 0x43e,
  ProgrammableButton32 = 0x43f,
  AudioOn = 0x460,
  AudioOff = 0x461,
  AudioToggle = 0x462,
  AudioClickyToggle = 0x46a,
  AudioClickyOn = 0x46b,
  AudioClickyOff = 0x46c,
  AudioClickyUp = 0x46d,
  AudioClickyDown = 0x46e,
  AudioClickyReset = 0x46f,
  MusicOn = 0x470,
  MusicOff = 0x471,
  MusicToggle = 0x472,
  MusicModeNext = 0x473,
  AudioVoiceNext = 0x474,
  AudioVoicePrevious = 0x475,
  StenoBolt = 0x4f0,
  StenoGemini = 0x4f1,
  StenoComb = 0x4f2,
  StenoCombMax = 0x4fc,
  Macro0 = 0x500,
  Macro1 = 0x501,
  Macro2 = 0x502,
  Macro3 = 0x503,
  Macro4 = 0x504,
  Macro5 = 0x505,
  Macro6 = 0x506,
  Macro7 = 0x507,
  Macro8 = 0x508,
  Macro9 = 0x509,
  Macro10 = 0x50a,
  Macro11 = 0x50b,
  Macro12 = 0x50c,
  Macro13 = 0x50d,
  Macro14 = 0x50e,
  Macro15 = 0x50f,
  Macro16 = 0x510,
  Macro17 = 0x511,
  Macro18 = 0x512,
  Macro19 = 0x513,
  Macro20 = 0x514,
  Macro21 = 0x515,
  Macro22 = 0x516,
  Macro23 = 0x517,
  Macro24 = 0x518,
  Macro25 = 0x519,
  Macro26 = 0x51a,
  Macro27 = 0x51b,
  Macro28 = 0x51c,
  Macro29 = 0x51d,
  Macro30 = 0x51e,
  Macro31 = 0x51f,
  BacklightOn = 0x600,
  BacklightOff = 0x601,
  BacklightToggle = 0x602,
  BacklightDown = 0x603,
  BacklightUp = 0x604,
  BacklightStep = 0x605,
  BacklightToggleBreathing = 0x606,
  RgbTog = 0x620,
  RgbModeForward = 0x621,
  RgbModeReverse = 0x622,
  RgbHui = 0x623,
  RgbHud = 0x624,
  RgbSai = 0x625,
  RgbSad = 0x626,
  RgbVai = 0x627,
  RgbVad = 0x628,
  RgbSpi = 0x629,
  RgbSpd = 0x62a,
  RgbModePlain = 0x62b,
  RgbModeBreathe = 0x62c,
  RgbModeRainbow = 0x62d,
  RgbModeSwirl = 0x62e,
  RgbModeSnake = 0x62f,
  RgbModeKnight = 0x630,
  RgbModeXmas = 0x631,
  RgbModeGradient = 0x632,
  RgbModeRgbtest = 0x633,
  RgbModeTwinkle = 0x634,
  Bootloader = 0x700,
  Reboot = 0x701,
  DebugToggle = 0x702,
  ClearEeprom = 0x703,
  Make = 0x704,
  AutoShiftDown = 0x710,
  AutoShiftUp = 0x711,
  AutoShiftReport = 0x712,
  AutoShiftOn = 0x713,
  AutoShiftOff = 0x714,
  AutoShiftToggle = 0x715,
  GraveEscape = 0x716,
  VelocikeyToggle = 0x717,
  SpaceCadetLCtrlParenthesisOpen = 0x718,
  SpaceCadetRCtrlParenthesisClose = 0x719,
  SpaceCadetLShiftParenthesisOpen = 0x71a,
  SpaceCadetRShiftParenthesisClose = 0x71b,
  SpaceCadetLAltParenthesisOpen = 0x71c,
  SpaceCadetRAltParenthesisClose = 0x71d,
  SpaceCadetRShiftEnter = 0x71e,
  OutputAuto = 0x720,
  OutputUsb = 0x721,
  OutputBluetooth = 0x722,
  UnicodeModeNext = 0x730,
  UnicodeModePrevious = 0x731,
  UnicodeModeMacos = 0x732,
  UnicodeModeLinux = 0x733,
  UnicodeModeWindows = 0x734,
  UnicodeModeBsd = 0x735,
  UnicodeModeWincompose = 0x736,
  UnicodeModeEmacs = 0x737,
  HapticOn = 0x740,
  HapticOff = 0x741,
  HapticToggle = 0x742,
  HapticReset = 0x743,
  HapticFeedbackToggle = 0x744,
  HapticBuzzToggle = 0x745,
  HapticModeNext = 0x746,
  HapticModePrevious = 0x747,
  HapticContinuousToggle = 0x748,
  HapticContinuousUp = 0x749,
  HapticContinuousDown = 0x74a,
  HapticDwellUp = 0x74b,
  HapticDwellDown = 0x74c,
  ComboOn = 0x750,
  ComboOff = 0x751,
  ComboToggle = 0x752,
  DynamicMacroRecordStart1 = 0x753,
  DynamicMacroRecordStart2 = 0x754,
  DynamicMacroRecordStop = 0x755,
  DynamicMacroPlay1 = 0x756,
  DynamicMacroPlay2 = 0x757,
  Leader = 0x758,
  Lock = 0x759,
  OneShotOn = 0x75a,
  OneShotOff = 0x75b,
  OneShotToggle = 0x75c,
  KeyOverrideToggle = 0x75d,
  KeyOverrideOn = 0x75e,
  KeyOverrideOff = 0x75f,
  SecureLock = 0x760,
  SecureUnlock = 0x761,
  SecureToggle = 0x762,
  SecureRequest = 0x763,
  DynamicTappingTermPrint = 0x770,
  DynamicTappingTermUp = 0x771,
  DynamicTappingTermDown = 0x772,
  CapsWordToggle = 0x773,
  AutocorrectOn = 0x774,
  AutocorrectOff = 0x775,
  AutocorrectToggle = 0x776,
  TriLayerLower = 0x777,
  TriLayerUpper = 0x778,
  RepeatKey = 0x779,
  AltRepeatKey = 0x77a,
  Kb0 = 0x800,
  Kb1 = 0x801,
  Kb2 = 0x802,
  Kb3 = 0x803,
  Kb4 = 0x804,
  Kb5 = 0x805,
  Kb6 = 0x806,
  Kb7 = 0x807,
  Kb8 = 0x808,
  Kb9 = 0x809,
  Kb10 = 0x80a,
  Kb11 = 0x80b,
  Kb12 = 0x80c,
  Kb13 = 0x80d,
  Kb14 = 0x80e,
  Kb15 = 0x80f,
  Kb16 = 0x810,
  Kb17 = 0x811,
  Kb18 = 0x812,
  Kb19 = 0x813,
  Kb20 = 0x814,
  Kb21 = 0x815,
  Kb22 = 0x816,
  Kb23 = 0x817,
  Kb24 = 0x818,
  Kb25 = 0x819,
  Kb26 = 0x81a,
  Kb27 = 0x81b,
  Kb28 = 0x81c,
  Kb29 = 0x81d,
  Kb30 = 0x81e,
  Kb31 = 0x81f,
  User0 = 0x840,
  User1 = 0x841,
  User2 = 0x842,
  User3 = 0x843,
  User4 = 0x844,
  User5 = 0x845,
  User6 = 0x846,
  User7 = 0x847,
  User8 = 0x848,
  User9 = 0x849,
  User10 = 0x84a,
  User11 = 0x84b,
  User12 = 0x84c,
  User13 = 0x84d,
  User14 = 0x84e,
  User15 = 0x84f,
  User16 = 0x850,
  User17 = 0x851,
  User18 = 0x852,
  User19 = 0x853,
  User20 = 0x854,
  User21 = 0x855,
  User22 = 0x856,
  User23 = 0x857,
  User24 = 0x858,
  User25 = 0x859,
  User26 = 0x85a,
  User27 = 0x85b,
  User28 = 0x85c,
  User29 = 0x85d,
  User30 = 0x85e,
  User31 = 0x85f,
}

export function keyToDisplay(key: number): [string | null, string | null] {
  const k1Code = key & 0xff00;
  const k2Code = key & 0x00ff;
  let k1 = null;
  const k2 = k2Code ? KeyCode[k2Code]! : null;

  if (isLT(k1Code)) {
    k1 = `LT(${(k1Code - 0x4000) >> 8})`;
  }
  if (isMO(key)) {
    return [null, `MO(${key - 0x5220})`];
  }

  return [k1, k2];
}

export function keyToConfig(key: number): string {
  const k1Code = key & 0xff00;
  const k2Code = key & 0x00ff;
  const k2 = k2Code ? KeyCode[k2Code]! : "No";

  if (isLT(k1Code)) {
    return `LT(${(k1Code - 0x4000) >> 8}, ${k2})`;
  }
  if (isMO(key)) {
    return `MO(${key - 0x5220})`;
  }

  return `${k2}`;
}

function isLT(key: number): boolean {
  return key >= 0x0400 && key <= 0x04f00;
}

function isMO(key: number): boolean {
  return key >= 0x5220 && key <= 0x523f;
}
